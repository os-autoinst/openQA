#!/bin/bash

#
# perltidy rules can be found in ../.perltidyrc
#

check=
only_changed=
if test "$1"  = '--check'; then
    shift
    check=1
fi
if test "$1"  = '--only-changed'; then
    shift
    only_changed=1
fi

if ! which perltidy > /dev/null 2>&1; then
    echo "No perltidy found, install it first!"
    exit 1
fi

function find_changed_files() {
    changed_files=()
    for file in "${files[@]}"; do
        if ! [[ $only_changed ]] || [ "$(git diff --name-only "$file")" ]; then
            changed_files+=("$file")
        fi
    done
}

cd "${0%/*}/.."

# just to make sure we are at the right location
test -e script/openqa || exit 1

find -name '*.tdy' -delete

# .pc directory is used for "quilt" patch system (in Debian/Ubuntu)
# it contains pre-patched files and should be ignored
files=($(find . ! -path '*/.pc/*' \( -name '*.p[lm]' -o -name '*.t' \)))
find_changed_files
[[ $changed_files ]] && perltidy --pro=.../.perltidyrc "${changed_files[@]}"

files=(script/{check_dependencies,client,initdb,openqa,worker,upgradedb,load_templates,dump_templates,clean_needles,openqa-scheduler,openqa-websockets})
find_changed_files
[[ $changed_files ]] && perltidy $TIDY_ARGS "${changed_files[@]}"

while read file; do
    if ! diff -u ${file%.tdy} $file; then
        if test -n "$check"; then
            echo "RUN tools/tidy script before checkin"
            exit 1
        else
            mv -v $file ${file%.tdy}
        fi
    else
        rm $file
    fi
done < <(find . -name "*.tdy")

# vim: set sw=4 et:
