% layout 'bootstrap';
% title '';

%= include 'layouts/info'

% content_for 'ready_function' => begin
    $('.timeago').timeago();
% end

<h2>Last Builds for Group <%= $group->{name} %></h2>

% if($description) {
    <div class="well well-lg" id="group_description">
        %= $description
    </div>
% }
% if ($pinned_comments) {
    <div id="group_descriptions">
    % for my $comment (@$pinned_comments) {
        %= include 'comments/comment_row', comment_id => $comment->id, comment => $comment, user => $comment->user, context => {type => 'group', id => $group->{id}, pinned => 1}, put_action => 'apiv1_put_group_comment', delete_action => 'apiv1_delete_group_comment'
    % }
    </div>
% }

%= include 'main/group_builds', result => $result, group => $group

<div id="more_builds">
    Limit to
    %= b join(' / ', map { $_ == $limit_builds ? "<b>$_</b>" : link_to($_ => url_with->query([time_limit_days => 1000, limit_builds => $_])) } (10, 20, 50, 100, 400));
    builds, only
    % my %tagged = (tagged => 1, all => 0);
    % my %rtagged = reverse %tagged;
    % my $selected = $rtagged{$only_tagged};
    %= b join(' / ', map { $_ eq $selected ? "<b>$_</b>" : link_to($_ => url_with->query([only_tagged => $tagged{$_}])) } reverse sort keys %tagged);
</div>

<h2>Comments</h2>
% for my $comment (reverse @$comments) {
    %= include 'comments/comment_row', comment_id => $comment->id, comment => $comment, user => $comment->user, context => {type => 'group', id => $group->{id}}, put_action => 'apiv1_put_group_comment', delete_action => 'apiv1_delete_group_comment'
% }

% if (current_user) {
    <script id="comment-row-template" type="text/template">
        %= include 'comments/comment_row', comment_id => '@comment_id@', comment => 0, user => current_user, context => {type => 'group', id => $group->{id}}, put_action => 'apiv1_put_group_comment', delete_action => 'apiv1_delete_group_comment'
    </script>
    %= form_for url_for('apiv1_post_group_comment', group_id => $group->{id}) => (method => "post", class => "form-horizontal", id => "commentForm", role => "form", onsubmit => "addComment(this, false); return false;") => begin
        %= include 'comments/add_comment_form_groups'
    % end
% }
