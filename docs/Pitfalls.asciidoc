
= openQA pitfalls
:toc: left
:toclevels: 6
:author: openQA Team

== Needle editing

- If a new needle is created based on a failed test, the new needle
  will not be listed in old tests.
- If an existing needle is updated with a new image or different
  areas, the old test will display the new needle which might be
  confusing
- If a needle is deleted, old tests may display an error when viewing
  them in the web UI.

== 403 messages when using scripts

- If you come across messages displaying +ERROR: 403 - Forbidden+, make
  sure that the correct API key is present in client.conf file.
- If you are using a hostname other than +localhost+, pass *--host foo* to the script.
- If you are using fake authentication method, and the message says also "api key expired"
  you can simply logout and log in again in the webUI and the expiration will be automatically
  updated

== Mixed production and development environment

There are few things to take into account when running a development version and
a packaged version of openqa:

If the setup for the development scenario involves sharing +/var/lib/openqa+,
it would be wise to have a shared group _openqa_, that will have write and execute
permissions over said directory, so that _geekotest_ user and the normal development
user can share the environment without problems.

This approach will lead to a problem when the openqa package is updated, since the
directory permissions will be changed again, nothing a `chmod -R g+rwx /var/lib/openqa/`
and `chgrp -R openqa /var/lib/openqa` can not fix.

== Performance impact

openQA workers can cause high I/O load, especially when creating VM snapshots.
The impact therefore gets more severe when +MAKETESTSNAPSHOTS+ is enabled.
should not impact the stability of openQA jobs but can increase job execution
time. If you run jobs on a machine where responsiveness of other services
matter, for example your desktop machine, consider patching the
IOSchedulingPriority of a workers service file as described in the
https://www.freedesktop.org/software/systemd/man/systemd.exec.html#IOSchedulingPriority=[systemd
documentation], for example set +IOSchedulingPriority=7+ for the lowest
priority. If not available then you can try to execute the worker processes
with +ionice+ to reduce the risk of your system becoming significantly
impacted by snapshot creation. Loading VM snapshots can also have an impact on
SUT behavior as the execution of the first step after loading a snapshot might
be delayed. This can lead to problems if the executed tests do not foresee an
appropriate timeout margin.

== DB migration from SQlite to postgreSQL
As a first step to start using postgreSQL, please, configure postgreSQL database
according to the
link:Contributing.asciidoc#how-to-setup-postgresql-to-test-locally-with-production-data[postgreSQL setup guide]

To migrate api keys run following commands:

* Export data from the SQlite db:
```
sqlite3 db.sqlite -csv -separator ',' 'select * from api_keys;' > apikeys.csv
```
Note: SQlite database file is located in `/var/lib/openqa/db` by default.

* Import data to the postgreSQL
```
# openqa is the postgreSQL database name and apikeys.csv is api keys export file
psql -U postgres -d openqa -c "copy api_keys from 'apikeys.csv' with (format csv);"
```

In case you need to migrate job groups, test suites, use dump_templates and
load_templates scripts accordingly.
