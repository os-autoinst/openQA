# Copyright (C) 2020 SUSE LLC
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, see <http://www.gnu.org/licenses/>.

package OpenQA::CLI::clone;
use Mojo::Base 'OpenQA::Command';

use Mojo::Util qw(getopt);
use OpenQA::Script::CloneJob;

has description => 'Clone a job from a local or remote instance';
has usage       => sub { shift->extract_usage };
has options     => ();
has jobid       => undef;

sub command {
    my ($self, @args) = @_;

    my $from;
    getopt \@args,
      'from=s'   => sub { $from = $_[1] },
      'from-o3'  => sub { $from = 'https://openqa.opensuse.org' },
      'from-osd' => sub { $from = 'http://openqa.suse.de' },
      'dir=s'                => \(my $dir = '/var/lib/openqa/factory'),
      'skip-deps'            => \my $skip_deps,
      'skip-chained-deps'    => \my $skip_chained_deps,
      'skip-download'        => \my $skip_download,
      'w|within-instance=s'  => \my $within_instance,
      'show-progress'        => \my $show_progress,
      'parental-inheritance' => \my $parental_inheritance,
      'v|verbose'            => \my $verbose;

    @args = $self->decode_args(@args);
    die $self->usage if $within_instance && $from;

    my $jobid;
    if ($within_instance) {
        ($from, $jobid) = split_jobid($within_instance);
        $skip_download = 1;
        $self->host($from);
    }
    elsif ($from) {
        ($from, $jobid) = split_jobid($from);
    }
    $jobid = shift @args unless $jobid;
    die $self->usage unless $jobid;
    ($from, $jobid) = split_jobid($jobid) unless $from;
    $self->usage unless $jobid && $from;
    $self->jobid($jobid);

    my $options = {
        # Needed to create local/remote client
        apikey    => $self->apikey,
        apisecret => $self->apisecret,
        from      => $from,
        host      => $self->host,
        # Clone options
        dir                    => $dir,
        'parental-inheritance' => $parental_inheritance,
        'show-progress'        => $show_progress,
        'skip-deps'            => $skip_deps,
        'skip-download'        => $skip_download,
        'skip-chained-deps'    => $skip_chained_deps,
        verbose                => $verbose,
    };
    $options->{args} = \@args;
    $self->options($options);

    clone_job($jobid, $options);

    return 0;
}

1;

=encoding utf8

=head1 SYNOPSIS

  Usage: openqa-cli clone [OPTIONS] JOBREF [KEY=[VALUE] ...]

    openqa-cli clone https://openqa.opensuse.org/t42

    openqa-cli clone --from https://openqa.opensuse.org/tests/42

    openqa-cli clone --from https://openqa.opensuse.org 42

    openqa-cli clone --from https://openqa.opensuse.org --host openqa.example.com 42

    openqa-cli clone --from localhost --host localhost 42 MAKETESTSNAPSHOTS=1 FOOBAR=

  Call with either a full URL pointing to a test job to clone from or one of
  both parameters --from or --within-instance. The job ID can be specified
  as part of the URL or as its own parameter.

  Any parent jobs (chained or parallel) are also cloned unless --skip-deps or
  --skip-chained-deps is specified. If --skip-chained-deps is specified
  published assets generated by parent jobs are downloaded to be directly used
  instead of generated. Keep in mind that any additional parameters are not
  added to the also cloned parent jobs.

  Options:
        --apibase <path>           API base, defaults to /api/v1
        --apikey <key>             API key
        --apisecret <secret>       API secret
        --host <host>              Target host, defaults to http://localhost
        --from <host>              Remote host
        --from-osd                 Remote host analogue to --osd
        --from-o3                  Remote host analogue to --o3
    -h, --help                     Show this summary of available options
        --dir <dir>                Directory where tests are stored (defaults to /var/lib/openqa/factory)
        --skip-deps                Do not clone parent jobs
        --skipchained-deps         Do not clone parent jobs of type chained, but use the downloaded HDD image
        --skip-download            Do not download anything automatically.
    -w, --within-instance          Shortcut for: --skip-download --from HOST --host HOST
        --show-progress            Display a progress bar for assets downloads
        --parental-inheritance     Provide parental job with variables, rather than the child job
    -v, --verbose                  Increase verbosity
        --osd                      Set target host to http://openqa.suse.de
        --o3                       Set target host to https://openqa.opensuse.org

=cut
